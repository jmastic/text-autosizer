<title>Autofit text in this window</title>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
<script type="text/javascript" src="/scripts/jquery.textfill.min.js"></script>
<link rel="stylesheet" type="text/css" href="/stylesheets/main.css" />
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Inter" />

<script>
  const TEXT_INPUT_DIV = "TextInput";
  let fullText = "";

  $(function () {
    // Set the initial "text" box to
    setupTextAreaListener(`#${TEXT_INPUT_DIV}`);
    window.onresize = () => {
      refit(fullText);
    };
  });

  const resetColumns = () => {
    $(".container").html(`<div class="textbox"><span></span></div>`);
  };

  const addColumn = () => {
    $(".container").append(`<div class="textbox"><span></span></div>`);
  };

  const splitText = (text, times) => {
    let separateLines = text.split(/\r?\n|\r|\n/g);
    const size = Math.ceil(separateLines.length / times);
    return Array.from({ length: times }, (v, i) => separateLines.slice(i * size, i * size + size));
  };

  const setText = (text, index) => {
    $(`.textbox:nth-child(${index + 1}) span`).html(text);
  };

  const fitText = (index) => {
    $(`.textbox`).textfill({
      maxFontPixels: -1,
    });
  };

  const setOneColumn = (text) => {
    resetColumns();
    setText(text, 0);
    fitText(0);
    // All right, so we've pasted it and it's sized to a single column.
    // Let's get the font size and see if we can make it larger.
    return parseInt($(".textbox span").css("fontSize"));
  };

  const setTwoColumns = (text) => {
    resetColumns();
    addColumn();
    let cols = splitText(text, 2);
    setText(cols[0].map((row) => row.trim()).join("\n"), 0);
    setText(cols[1].map((row) => row.trim()).join("\n"), 1);
    $(".textbox").css("width", "calc(100%/2)");
    fitText(0);
    fitText(1);
    return Math.min(
      parseInt($(".textbox:nth-child(1) span").css("fontSize")),
      parseInt($(".textbox:nth-child(2) span").css("fontSize"))
    );
  };

  const setThreeColumns = (text) => {
    resetColumns();
    addColumn();
    addColumn();
    cols = splitText(text, 3);
    setText(cols[0].map((row) => row.trim()).join("\n"), 0);
    setText(cols[1].map((row) => row.trim()).join("\n"), 1);
    setText(cols[2].map((row) => row.trim()).join("\n"), 2);
    $(".textbox").css("width", "calc(100%/3)");
    fitText(0);
    fitText(1);
    fitText(2);
    return Math.min(
      parseInt($(".textbox:nth-child(1) span").css("fontSize")),
      parseInt($(".textbox:nth-child(2) span").css("fontSize")),
      parseInt($(".textbox:nth-child(3) span").css("fontSize"))
    );
  };

  const refit = (text) => {
    fullText = text;
    const oneColFontSize = setOneColumn(text);
    // Now, let's try 2 columns
    const twoColFontSize = setTwoColumns(text);
    // Now, let's try 3 columns
    const threeColFontSize = setThreeColumns(text);

    console.log(oneColFontSize, twoColFontSize, threeColFontSize);

    // If 1 column has bigger text, use it
    if (oneColFontSize > twoColFontSize && oneColFontSize > threeColFontSize) {
      console.log("prefer one");
      resetColumns();
      setOneColumn(text);
    }
    // 2 is going to be our "preferred" sizing
    if (twoColFontSize >= oneColFontSize && twoColFontSize >= threeColFontSize) {
      console.log("prefer two");
      resetColumns();
      setTwoColumns(text);
    }
    if (threeColFontSize > oneColFontSize && threeColFontSize > twoColFontSize) {
      console.log("prefer three");
      resetColumns();
      setThreeColumns(text);
    }
  };

  const textAdded = (event) => {
    // move text to the display box
    const textDisplay = event.target.value;
    refit(textDisplay);
  };

  const setupTextAreaListener = (target) => {
    var area = document.querySelector(target);
    if (area.addEventListener) {
      area.addEventListener("input", textAdded, false);
    } else if (area.attachEvent) {
      area.attachEvent("onpropertychange", textAdded);
    }
  };
</script>
